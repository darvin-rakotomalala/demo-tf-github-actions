# .github/workflows/terraform-aws.yml

name: Demo Terraform CI/CD
# Event that triggers the workflow
on:
  push:
    branches:
      - main
    # paths:
    # - terraform/**
  pull_request:
    branches:
      - main
    # paths:
    # - terraform/**

# Contains a list of jobs. Each job runs in parallel by default and in an isolated environment.
# In this case, will be run on an Ubuntu runner using latest version.
jobs:
  terraform:
    name: "Terraform Infrastructure Change Management"
    runs-on: ubuntu-latest
    env:
      # verbosity setting for Terraform logs
      TF_LOG: INFO
      # Credentials for deployment to AWS
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # S3 bucket for the Terraform state
      BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}

    # A list of steps that execute in order.
    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v4

      - name: Set up Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'push'
        run: terraform plan -out=tfplan
        # run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: apply
        run: terraform apply -auto-approve
